// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AgentifaiFeatureSelector
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AgentifaiCoreCommon
import AgentifaiCoreUI
@_exported import AgentifaiFeatureSelector
import AgentifaiSharedResources
import Foundation
import RxCocoa
import RxSwift
import Swift
import Swinject
import UIKit
import _Concurrency
import _StringProcessing
@_hasMissingDesignatedInitializers public class FeatureSelectorDI {
  public static func register(container: Swinject.Container)
  @objc deinit
}
public class SelectorItem {
  final public let id: Swift.String
  final public let label: Swift.String
  public var isSelected: Swift.Bool
  public init(id: Swift.String, label: Swift.String, isSelected: Swift.Bool)
  @objc deinit
}
extension AgentifaiFeatureSelector.SelectorItem : Swift.Equatable {
  public static func == (lhs: AgentifaiFeatureSelector.SelectorItem, rhs: AgentifaiFeatureSelector.SelectorItem) -> Swift.Bool
}
public class SelectorCellTheme {
  public init(labelTheme: AgentifaiCoreUI.TextTheme)
  @objc deinit
}
public class SelectorFeatureOutput {
  public init(itemsSelected: @escaping (_ items: [Swift.String]) -> Swift.Void)
  @objc deinit
}
public class SelectorFeatureInput {
  public init(theme: AgentifaiFeatureSelector.SelectorTheme, items: [AgentifaiFeatureSelector.SelectorItem], title: Swift.String, searchPlaceholder: Swift.String, confirmLabel: Swift.String, emptyMessage: Swift.String, minSelectedItemsAllowed: Swift.Int, maxSelectedItemsAllowed: Swift.Int, isDismissable: Swift.Bool = true)
  @objc deinit
}
public class SelectorTheme {
  public init(navigationTheme: AgentifaiCoreUI.NavigationTheme, backgroundColor: AgentifaiCoreUI.Color, cellTheme: AgentifaiFeatureSelector.SelectorCellTheme, separatorColor: AgentifaiCoreUI.Color, confirmButtonTheme: AgentifaiCoreUI.ButtonTheme, emptyResultsTheme: AgentifaiCoreUI.TextTheme)
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class SelectorViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLayoutSubviews()
  @objc deinit
}
extension AgentifaiFeatureSelector.SelectorViewController : UIKit.UITableViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
}
