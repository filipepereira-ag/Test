// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AgentifaiFeatureWebView
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AgentifaiCoreUI
@_exported import AgentifaiFeatureWebView
import Foundation
import Swift
import Swinject
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
public class WebViewInput {
  public init(url: Foundation.URL, title: Swift.String, theme: AgentifaiFeatureWebView.WebViewTheme)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class FeatureWebViewDI {
  public static func register(container: Swinject.Container)
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class WebViewViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @objc deinit
}
extension AgentifaiFeatureWebView.WebViewViewController : WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
}
public class WebViewTheme {
  public init(navigationTheme: AgentifaiCoreUI.NavigationTheme, backgroundColor: AgentifaiCoreUI.Color)
  @objc deinit
}
